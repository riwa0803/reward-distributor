sequenceDiagram
    participant Admin as 管理者/オペレーター
    participant Creator as Airdrop作成者
    participant RC as RewardDistributorコントラクト
    participant EL as イベントリスナー
    participant DB as データベース
    participant User as ユーザー
    participant FE as フロントエンド
    participant Cron as クロンジョブ

    %% 手動Airdrop終了フロー（管理者）
    rect rgb(230, 240, 255)
      note over Admin, DB: 手動Airdrop終了フロー（管理者/オペレーター）
      Admin->>RC: updateAirdropStatus(airdropId, false)
      RC->>RC: 権限チェック(isOwner || isOperator)
      RC->>RC: airdrops[airdropId].isActive = false
      RC-->>Admin: トランザクション完了
      RC-->>EL: AirdropStatusUpdatedイベント発行
      EL->>EL: イベント検知
      EL->>DB: Airdropステータスを無効に更新
    end

    %% 手動Airdrop終了フロー（作成者）
    rect rgb(235, 235, 255)
      note over Creator, DB: 手動Airdrop終了フロー（作成者）
      Creator->>RC: updateAirdropStatus(airdropId, false)
      RC->>RC: 権限チェック(msg.sender == airdrops[airdropId].creator)
      RC->>RC: airdrops[airdropId].isActive = false
      RC-->>Creator: トランザクション完了
      RC-->>EL: AirdropStatusUpdatedイベント発行
      EL->>EL: イベント検知
      EL->>DB: Airdropステータスを無効に更新
    end

    %% 自動Airdrop終了フロー（期限切れ）
    rect rgb(255, 235, 235)
      note over Cron, DB: 自動Airdrop終了フロー（期限切れ）
      Cron->>Cron: 毎日実行
      Cron->>DB: 期限切れAirdropをクエリ
      DB-->>Cron: 期限切れのアクティブなAirdropリスト
      
      loop 各期限切れAirdrop
        Cron->>RC: updateAirdropStatus(airdropId, false)
        RC->>RC: 権限チェック(システムウォレットはオペレーター)
        RC->>RC: airdrops[airdropId].isActive = false
        RC-->>Cron: トランザクション完了
        RC-->>EL: AirdropStatusUpdatedイベント発行
        EL->>EL: イベント検知
        EL->>DB: Airdropステータスを無効に更新
      end
    end

    %% 無効化されたAirdropの報酬請求拒否フロー
    rect rgb(255, 245, 240)
      note over User, RC: 無効化されたAirdropの報酬請求拒否
      User->>FE: 報酬請求ボタンをクリック
      FE->>RC: isAirdropValid(airdropId)
      RC->>RC: 有効性チェック処理
      RC-->>FE: false（無効）
      FE-->>User: エラー「このAirdropは終了しました」
    end
